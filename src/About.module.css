.container {
  width: 100%;
  max-width: var(--max-content-width);
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  gap: 2.5rem;
}

.terminal {
  width: 100%;
  background: var(--container-bg);
  border-radius: 1rem;
  overflow: hidden;
  box-shadow: var(--shadow-md);
  border: 1px solid var(--divider-color);
  position: relative;
}

.terminal::before {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: inherit;
  padding: 1px;
  background: linear-gradient(
    135deg,
    var(--primary) 0%,
    transparent 50%
  );
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  opacity: 0.3;
}

.terminalHeader {
  padding: 1rem;
  background: var(--surface-100);
  border-bottom: 1px solid var(--divider-color);
  display: flex;
  align-items: center;
  gap: 1rem;
}

.terminalDots {
  display: flex;
  gap: 0.5rem;
}

.terminalDots span {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  transition: opacity 0.2s ease;
}

.terminal:hover .terminalDots span {
  opacity: 0.8;
}

.terminalDots span:nth-child(1) {
  background: var(--accent-error);
}

.terminalDots span:nth-child(2) {
  background: var(--accent-warning);
}

.terminalDots span:nth-child(3) {
  background: var(--accent-success);
}

/* Terminal Code Styles */
.terminalTitle {
  font-family: 'Fira Code', monospace;
  font-size: 0.9rem;
  color: var(--secondary);
  opacity: 0.8;
}

.terminalBody {
  padding: 1.5rem;
  font-family: 'Fira Code', monospace;
  font-size: 0.95rem;
  line-height: 1.6;
  background: var(--container-bg);
  min-height: 200px;
}



.line {
  white-space: pre;
  padding: 0.25rem 0;
  color: var(--text);
}

.comment { color: var(--secondary-light); }
.property { color: var(--text); }
.property::before { color: var(--primary-light); }
.array-start, .array-end { color: var(--primary); }
.array-item { 
  color: var(--accent-success);
  padding-left: 2rem;
}

/* Content Layout */
.content {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

/* Focus Areas */
.focusGrid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 1.5rem;
}

.focusItem {
  background: var(--container-bg);
  border-radius: 0.75rem;
  padding: 1.25rem;
  display: flex;
  align-items: center;
  gap: 1rem;
  border: 1px solid var(--divider-color);
  position: relative;
  overflow: hidden;
  isolation: isolate;
}

.focusItem::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    45deg,
    var(--focus-color) 0%,
    transparent 60%
  );
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
}

.focusItem:hover::before {
  opacity: 0.1;
}

.focusIcon {
  color: var(--focus-color);
  display: flex;
  align-items: center;
  justify-content: center;
  transition: transform 0.3s ease;
}

.focusItem:hover .focusIcon {
  transform: scale(1.1) rotate(-10deg);
}

.focusText {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.focusTitle {
  font-weight: 500;
  color: var(--text);
}

.focusDesc {
  font-size: 0.8rem;
  color: var(--secondary);
}

/* Skills Grid */
.skillsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(90px, 1fr));
  gap: 0.75rem;
}

.skillItem {
  position: relative;
  background: var(--surface-0);
  padding: 0.6rem 0.75rem;
  border-radius: 0.6rem;
  text-align: center;
  border: 1px solid var(--divider-color);
  cursor: pointer;
  overflow: hidden;
  transition: all 0.3s ease;
  height: 2.5rem; /* Fixed height to prevent layout shifts */
}

.skillItem::before {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    135deg,
    var(--skill-color) 0%,
    transparent 80%
  );
  opacity: 0.1;
  transition: opacity 0.3s ease;
}

.skillItem:hover::before {
  opacity: 0.15;
}

.skillText {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.85rem;
  font-weight: 500;
  color: var(--text);
  background: var(--surface-0);
  transition: transform 0.3s ease;
  backface-visibility: hidden;
}

.skillCategory {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.7rem;
  color: var(--skill-color);
  background: var(--surface-0);
  transform: translateY(100%);
  transition: transform 0.3s ease;
  backface-visibility: hidden;
}

.skillItem:hover .skillCategory {
  transform: translateY(0);
}

.skillItem:hover .skillText {
  transform: translateY(-100%);
}

.skillGlow {
  position: absolute;
  inset: 0;
  background: var(--skill-color);
  filter: blur(20px);
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
}

.skillItem:hover .skillGlow {
  opacity: 0.05;
}

/* Media Queries */
@media (max-width: 768px) {
  .container {
    padding: 1rem;
    gap: 2rem;
  }

  .focusGrid {
    grid-template-columns: repeat(2, 1fr);
  }

  .terminalBody {
    padding: 1rem;
    font-size: 0.85rem;
    min-height: 180px;
  }

  .skillsGrid {
    grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
  }
}

@media (max-width: 480px) {
  .container {
    padding: 0.75rem;
  }

  .terminalBody {
    font-size: 0.8rem;
    min-height: 160px;
  }

  .array-item {
    padding-left: 1.5rem;
  }

  .focusGrid {
    gap: 1rem;
  }

  .focusItem {
    padding: 1rem;
  }

  .focusTitle {
    font-size: 0.9rem;
  }

  .focusDesc {
    font-size: 0.75rem;
  }

  .skillsGrid {
    grid-template-columns: repeat(auto-fill, minmax(70px, 1fr));
    gap: 0.5rem;
  }

  .skillItem {
    padding: 0.5rem 0.6rem;
    height: 2.2rem;
  }

  .skillText {
    font-size: 0.8rem;
  }

  .skillCategory {
    font-size: 0.65rem;
  }
}

/* Dark mode enhancements */
[data-theme='dark'] .skillItem::before {
  opacity: 0.15;
}

[data-theme='dark'] .skillItem:hover::before {
  opacity: 0.2;
}

[data-theme='dark'] .skillGlow {
  filter: blur(25px);
}

[data-theme='dark'] .skillItem:hover .skillGlow {
  opacity: 0.08;
}

/* Animation keyframes for potential use */
@keyframes float {
  0% { transform: translateY(0px); }
  50% { transform: translateY(-5px); }
  100% { transform: translateY(0px); }
}

@keyframes glow {
  0% { opacity: 0.1; }
  50% { opacity: 0.2; }
  100% { opacity: 0.1; }
}